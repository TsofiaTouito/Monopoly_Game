//tsofiatouito2@gmail.com 

#include "GUI_GameManager.hpp"




void DrawObject::draw_board(){

    sf::RenderWindow startWindow(sf::VideoMode(800, 600), "Monopoly game");

    //Load font
    sf::Font font;
    if (!font.loadFromFile("/usr/share/fonts/truetype/dejavu/DejaVuSans.ttf")) {
        std::cout << "Failed to load font!" << std::endl;
        return;
    }

    //Print the text
    sf::Text text;
    text.setFont(font);
    text.setString("Welcome to My-Monopoly game !");
    text.setCharacterSize(24);

    text.setFillColor(sf::Color::Blue);
    text.setStyle(sf::Text::Bold | sf::Text::Underlined);
    text.setPosition(160, 40);


    
    sf::Text text1;
    text1.setFont(font);
    text1.setString("Please enter the number of players :");
    text1.setCharacterSize(17);

    text1.setFillColor(sf::Color::Black);
    text1.setStyle(sf::Text::Bold);
    text1.setPosition(80, 250);



    //Run the program as long as the window is open
    while(startWindow.isOpen()){

        sf::Event event;
        while(startWindow.pollEvent(event)){

            if(event.type == sf::Event::Closed)
            {
                startWindow.close();
            }


        startWindow.clear(sf::Color::White);

        startWindow.draw(text);
        startWindow.draw(text1);

        startWindow.display();
        
        }
    }
}



//-------------------------------------------------------------------------------------------





/*Draw the state of the game :
    Players:
    Current turn:
    Current dice roll result:
    Print landing options:
*/
void DrawObject::game_state(){}



//-------------------------------------------------------------------------------------------

void DrawObject::draw_board(){

//Open SFML window
sf::RenderWindow window(sf::VideoMode(800, 800), "Monopoly game");

//Create the board
sf::Texture boardTexture;
sf::Sprite  boardSprite;

if(!boardTexture.loadFromFile("/home/user/Downloads/Board.jpg")){
    throw std::string("Board image failed to open .");
}

boardSprite.setTexture(boardTexture);
    


//Run the program as long as the window is open
while(window.isOpen()){

    sf::Event event;
    while(window.pollEvent(event)){

        if(event.type == sf::Event::Closed)
        {
            window.close();
        }

        if(event.type == sf::Event::KeyPressed && event.key.code == sf::Keyboard::Escape)
        {
            window.close();
        }
    }
    


    window.clear(sf::Color::Black);
    window.draw(boardSprite);
    window.display();

}
}

    

//-------------------------------------------------------------------------------------------

void DrawObject::draw_player(int num_of_players){}








//-------------------------------------------------------------------------------------------

void DrawObject::draw_asset(std::string asset_kind){}